<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" targetNamespace="http://data.webservice.uniboard.bfh.ch" xmlns:tns="http://data.webservice.uniboard.bfh.ch" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:complexType name="attributes">
    <xs:sequence>
      <xs:element name="entry" nillable="true" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="key" type="xs:string"/>
            <xs:element name="value" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="query">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="between" type="tns:between"/>
        <xs:element name="in" type="tns:in"/>
        <xs:element name="lesser" type="tns:lesser"/>
        <xs:element name="lesserequals" type="tns:lesserEquals"/>
        <xs:element name="greater" type="tns:greater"/>
        <xs:element name="greaterequals" type="tns:greaterEquals"/>
        <xs:element name="equals" type="tns:equals"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="between">
    <xs:complexContent>
      <xs:extension base="tns:constraint">
        <xs:sequence>
          <xs:element name="end" type="xs:anyType" minOccurs="0"/>
          <xs:element name="start" type="xs:anyType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="constraint" abstract="true">
    <xs:sequence>
      <xs:element name="identifier" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="in">
    <xs:complexContent>
      <xs:extension base="tns:constraint">
        <xs:sequence>
          <xs:element name="set" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="lesser">
    <xs:complexContent>
      <xs:extension base="tns:constraint">
        <xs:sequence>
          <xs:element name="value" type="xs:anyType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="lesserEquals">
    <xs:complexContent>
      <xs:extension base="tns:constraint">
        <xs:sequence>
          <xs:element name="value" type="xs:anyType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="greater">
    <xs:complexContent>
      <xs:extension base="tns:constraint">
        <xs:sequence>
          <xs:element name="value" type="xs:anyType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="greaterEquals">
    <xs:complexContent>
      <xs:extension base="tns:constraint">
        <xs:sequence>
          <xs:element name="value" type="xs:anyType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="equals">
    <xs:complexContent>
      <xs:extension base="tns:constraint">
        <xs:sequence>
          <xs:element name="value" type="xs:anyType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="resultContainer">
    <xs:sequence>
      <xs:element name="result" type="tns:result"/>
      <xs:element name="gamma" type="tns:attributes" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="result">
    <xs:sequence>
      <xs:element name="post" type="tns:post" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="post">
    <xs:sequence>
      <xs:element name="message" type="xs:base64Binary"/>
      <xs:element name="alpha" type="tns:attributes"/>
      <xs:element name="beta" type="tns:attributes"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>

