<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" targetNamespace="http://uniboard.bfh.ch/data" xmlns:tns="http://uniboard.bfh.ch/data" xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<xs:complexType name="attributes">
		<xs:sequence>
			<xs:element name="attribute" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="key" type="xs:string"/>
						<xs:element name="value" type="tns:value"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="value" abstract="true">
		<xs:sequence/>
	</xs:complexType>

	<xs:complexType name="byteArrayValue">
		<xs:complexContent>
			<xs:extension base="tns:value">
				<xs:sequence>
					<xs:element name="value" type="xs:base64Binary"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="dateValue">
		<xs:complexContent>
			<xs:extension base="tns:value">
				<xs:sequence>
					<xs:element name="value" type="xs:dateTime"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="integerValue">
		<xs:complexContent>
			<xs:extension base="tns:value">
				<xs:sequence>
					<xs:element name="value" type="xs:int"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="stringValue">
		<xs:complexContent>
			<xs:extension base="tns:value">
				<xs:sequence>
					<xs:element name="value" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="query">
		<xs:sequence>
			<xs:element name="constraint" type="tns:constraint" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="order" type="tns:order" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="limit" type="xs:int"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="constraint" abstract="true">
		<xs:sequence>
			<xs:element name="identifier" type="tns:identifier"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="identifier" abstract="true">
		<xs:sequence>
			<xs:element name="part" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="alphaIdentifier">
		<xs:complexContent>
			<xs:extension base="tns:identifier">
				<xs:sequence/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="betaIdentifier">
		<xs:complexContent>
			<xs:extension base="tns:identifier">
				<xs:sequence/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="messageIdentifier">
		<xs:complexContent>
			<xs:extension base="tns:identifier">
				<xs:sequence/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="between">
		<xs:complexContent>
			<xs:extension base="tns:constraint">
				<xs:sequence>
					<xs:element name="lowerBound" type="tns:value"/>
					<xs:element name="upperBound" type="tns:value"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="in">
		<xs:complexContent>
			<xs:extension base="tns:constraint">
				<xs:sequence>
					<xs:element name="element" type="tns:value" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="less">
		<xs:complexContent>
			<xs:extension base="tns:constraint">
				<xs:sequence>
					<xs:element name="value" type="tns:value"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="lessEqual">
		<xs:complexContent>
			<xs:extension base="tns:constraint">
				<xs:sequence>
					<xs:element name="value" type="tns:value"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="greater">
		<xs:complexContent>
			<xs:extension base="tns:constraint">
				<xs:sequence>
					<xs:element name="value" type="tns:value"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="greaterEqual">
		<xs:complexContent>
			<xs:extension base="tns:constraint">
				<xs:sequence>
					<xs:element name="value" type="tns:value"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="equal">
		<xs:complexContent>
			<xs:extension base="tns:constraint">
				<xs:sequence>
					<xs:element name="value" type="tns:value"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="notEqual">
		<xs:complexContent>
			<xs:extension base="tns:constraint">
				<xs:sequence>
					<xs:element name="value" type="tns:value"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="order">
		<xs:sequence>
			<xs:element name="identifier" type="tns:identifier"/>
			<xs:element name="ascDesc" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="resultContainer">
		<xs:sequence>
			<xs:element name="result" type="tns:result"/>
			<xs:element name="gamma" type="tns:attributes"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="result">
		<xs:sequence>
			<xs:element name="post" type="tns:post" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="post">
		<xs:sequence>
			<xs:element name="message" type="xs:base64Binary"/>
			<xs:element name="alpha" type="tns:attributes"/>
			<xs:element name="beta" type="tns:attributes"/>
		</xs:sequence>
	</xs:complexType>

</xs:schema>

